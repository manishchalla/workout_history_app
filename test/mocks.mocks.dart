// Mocks generated by Mockito 5.4.5 from annotations
// in workout_app/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:workout_app/models/workout.dart' as _i3;
import 'package:workout_app/models/workout_plan.dart' as _i4;
import 'package:workout_app/providers/workout_provider.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WorkoutProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkoutProvider extends _i1.Mock implements _i2.WorkoutProvider {
  MockWorkoutProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Workout> get workouts =>
      (super.noSuchMethod(
            Invocation.getter(#workouts),
            returnValue: <_i3.Workout>[],
          )
          as List<_i3.Workout>);

  @override
  List<_i4.WorkoutPlan> get savedWorkoutPlans =>
      (super.noSuchMethod(
            Invocation.getter(#savedWorkoutPlans),
            returnValue: <_i4.WorkoutPlan>[],
          )
          as List<_i4.WorkoutPlan>);

  @override
  List<_i3.Workout> get recentWorkouts =>
      (super.noSuchMethod(
            Invocation.getter(#recentWorkouts),
            returnValue: <_i3.Workout>[],
          )
          as List<_i3.Workout>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> loadWorkouts() =>
      (super.noSuchMethod(
            Invocation.method(#loadWorkouts, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> addWorkout(_i3.Workout? workout) =>
      (super.noSuchMethod(
            Invocation.method(#addWorkout, [workout]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteWorkout(int? workoutId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteWorkout, [workoutId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadSavedWorkoutPlans() =>
      (super.noSuchMethod(
            Invocation.method(#loadSavedWorkoutPlans, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> saveWorkoutPlan(_i4.WorkoutPlan? workoutPlan) =>
      (super.noSuchMethod(
            Invocation.method(#saveWorkoutPlan, [workoutPlan]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteWorkoutPlan(int? planId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteWorkoutPlan, [planId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> isDuplicatePlan(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#isDuplicatePlan, [name]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
